1. I used getchar and putchar for stdin and stdout. I compiled it using the 
command "gcc -o tr2b tr2b.c" and tested it using the command "printf "abcd" | 
./tr2b abcd efgh

2. This is similar. For input I wrote "read(0, c, 1)" and for output I used 
"write(1, &map[(int)*c], 1)".

3. I made a large file by writing a simple program:
   #include<stdio.h>
   int main(){
     int n = 0;
     for (; n < 2000500; n++)
       printf("abc");
     return 0;
   }
and put the result into a file named "input".
Then I used these commands to compare syscalls 

(a) when copying one file to another:
  strace ./tr2b abcd efgh < input > outputb.txt
  strace ./tr2u abcd efgh < input > outputu.txt
For tr2b:
It keeps the following pattern:
  read(0, "cabcabcabcabcabcabcabcabcabcabca"..., 65536) = 65536
  write(1, "fgefgefgefgefgefgefgefgefgefgefg"..., 65536) = 65536
with the last five exceptions:
  read(0, "bcabcabcabcabcabcabcabcabcabcabc"..., 65536) = 37724
  write(1, "efgefgefgefgefgefgefgefgefgefgef"..., 65536) = 65536
  read(0, "", 65536)                      = 0
  write(1, "fgefgefgefgefgefgefgefgefgefgefg"..., 37724) = 37724
  exit_group(0)                           = ?

For tr2u:
  It keeps the following pattern:
  write(1, "a", 1)                        = 1
  read(0, "e", 1)                         = 1

I also compare the total syscalls of the two programs using the command:
  strace -c ./tr2b abcd efgh < input > outputb.txt
  strace -c ./tr2u abcd efgh < input > outputu.txt

For tr2b, I got the following chart:
% time     seconds  usecs/call     calls    errors syscall
------ ----------- ----------- --------- --------- ----------------
 93.69    0.000193           2        92           write
  6.31    0.000013           3         4           fstat
  0.00    0.000000           0        94           read
  0.00    0.000000           0         2           open
  0.00    0.000000           0         2           close
  0.00    0.000000           0        10           mmap
  0.00    0.000000           0         3           mprotect
  0.00    0.000000           0         1           munmap
  0.00    0.000000           0         1           brk
  0.00    0.000000           0         1         1 access
  0.00    0.000000           0         1           execve
  0.00    0.000000           0         1           arch_prctl
------ ----------- ----------- --------- --------- ----------------
100.00    0.000206                   212         1 total

For tr2u:
% time     seconds  usecs/call     calls    errors syscall
------ ----------- ----------- --------- --------- ----------------
 58.02    0.135452           0   6001500           write
 41.98    0.098024           0   6001502           read
  0.00    0.000000           0         2           open
  0.00    0.000000           0         2           close
  0.00    0.000000           0         2           fstat
  0.00    0.000000           0         8           mmap
  0.00    0.000000           0         3           mprotect
  0.00    0.000000           0         1           munmap
  0.00    0.000000           0         1           brk
  0.00    0.000000           0         1         1 access
  0.00    0.000000           0         1           execve
  0.00    0.000000           0         1           arch_prctl
------ ----------- ----------- --------- --------- ----------------
100.00    0.233476              12003024         1 total

(b) when copying a file to your terminal:
For tr2b:
  strace ./tr2b abcd efgh < input
  It keeps the pattern:
  read(0, "", 65536)                      = 65536
  write(1, "efgefgefgefgefgefgefgefgefgefg"..., 1024) = 1024
  ...(keeps the same writing command)
  It seems that if it copies a file to terminal ,the maximum amount written 
every time is 1024 instead of 65536.

For tr2u:
    strace ./tr2u abcd efgh < input
    read(0, "a", 1)                         = 1
    write(1, "a", 1)                        = 1
which is the same as (a).

The total number of syscalls are:
    strace -c ./tr2b abcd efgh < input
% time     seconds  usecs/call     calls    errors syscall
------ ----------- ----------- --------- --------- ----------------
 95.65    0.001164           0      5861           write
  2.88    0.000035           0        94           read
  1.48    0.000018          18         1           munmap
  0.00    0.000000           0         2           open
  0.00    0.000000           0         2           close
  0.00    0.000000           0         4           fstat
  0.00    0.000000           0        10           mmap
  0.00    0.000000           0         3           mprotect
  0.00    0.000000           0         1           brk
  0.00    0.000000           0         1         1 access
  0.00    0.000000           0         1           execve
  0.00    0.000000           0         1           arch_prctl
------ ----------- ----------- --------- --------- ----------------
100.00    0.001217                  5981         1 total

For tr2u:
    strace -c ./tr2u abcd efgh < input
% time     seconds  usecs/call     calls    errors syscall
------ ----------- ----------- --------- --------- ----------------
 56.93    0.457089           0   6001500           write
 43.07    0.345864           0   6001502           read
  0.00    0.000000           0         2           open
  0.00    0.000000           0         2           close
  0.00    0.000000           0         2           fstat
  0.00    0.000000           0         8           mmap
  0.00    0.000000           0         3           mprotect
  0.00    0.000000           0         1           munmap
  0.00    0.000000           0         1           brk
  0.00    0.000000           0         1         1 access
  0.00    0.000000           0         1           execve
  0.00    0.000000           0         1           arch_prctl
------ ----------- ----------- --------- --------- ----------------
100.00    0.802953              12003024         1 total

4.
time ./tr2b abcd efgh < input > output
real    0m0.229s
user    0m0.111s
sys     0m0.007s

time ./tr2b abcd efgh < input
real    0m0.812s
user    0m0.234s
sys     0m0.047s

time ./tr2u abcd efgh < input > output
real    0m6.239s
user    0m0.260s
sys     0m5.901s

time ./tr2u abcd efgh < input
real    0m7.667s
user    0m0.256s
sys     0m7.408s

Thus, tr2b is much faster than tr2u, because it reads and writes 65535 
characters at a time while tr2u reads and writes only 1 character at a time.
